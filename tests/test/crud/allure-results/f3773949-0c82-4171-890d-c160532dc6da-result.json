{"name": "Test CRUD operation Update(PUT).", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL '<function APIConstants.url_create_token at 0x0000013B9F3C98A0>': No scheme supplied. Perhaps you meant https://<function APIConstants.url_create_token at 0x0000013B9F3C98A0>?", "trace": "self = <test.crud.test_crud.TestCRUDBooking object at 0x0000013B9F3BF470>\n\n    @pytest.fixture()\n    def create_token(self):\n>       response = post_request(url=APIConstants.url_create_token,\n                                headers=Util.common_headers_json,\n                                auth=None,\n                                payload=payload_create_booking(),\n                                in_json=False)\n\ntest_crud.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\src\\helpers\\api_requests_wrapper.py:12: in post_request\n    post_response = requests.post(url=url, headers=headers, auth=auth, data=json.dumps(payload))\n..\\..\\..\\.venv\\Lib\\site-packages\\requests\\api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n..\\..\\..\\.venv\\Lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n..\\..\\..\\.venv\\Lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\n..\\..\\..\\.venv\\Lib\\site-packages\\requests\\sessions.py:486: in prepare_request\n    p.prepare(\n..\\..\\..\\.venv\\Lib\\site-packages\\requests\\models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [POST]>\nurl = '<function APIConstants.url_create_token at 0x0000013B9F3C98A0>'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL '<function APIConstants.url_create_token at 0x0000013B9F3C98A0>': No scheme supplied. Perhaps you meant https://<function APIConstants.url_create_token at 0x0000013B9F3C98A0>?\n\n..\\..\\..\\.venv\\Lib\\site-packages\\requests\\models.py:439: MissingSchema"}, "description": "Verify that full update with booking id and token.", "start": 1712501403255, "stop": 1712501403255, "uuid": "43025307-cc18-4a5b-983c-5a7fd5e9ab6d", "historyId": "43c2e3ff368857b316f400ae43bb5648", "testCaseId": "43c2e3ff368857b316f400ae43bb5648", "fullName": "tests.test.crud.test_crud.TestCRUDBooking#test_update_booking_id_token", "labels": [{"name": "parentSuite", "value": "tests.test.crud"}, {"name": "suite", "value": "test_crud"}, {"name": "subSuite", "value": "TestCRUDBooking"}, {"name": "host", "value": "DESKTOP-9DM6QIP"}, {"name": "thread", "value": "15800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test.crud.test_crud"}]}